// Generated by view binder compiler. Do not edit!
package de.fhkiel.srcms.apps.therapy.physical.p.workout.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import de.fhkiel.srcms.apps.therapy.physical.p.workout.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityGroupeEntryBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button backButton;

  @NonNull
  public final Button buttonEasyAnimation;

  @NonNull
  public final Button buttonHardAnimation;

  @NonNull
  public final TextView txtWelcome;

  private ActivityGroupeEntryBinding(@NonNull ConstraintLayout rootView, @NonNull Button backButton,
      @NonNull Button buttonEasyAnimation, @NonNull Button buttonHardAnimation,
      @NonNull TextView txtWelcome) {
    this.rootView = rootView;
    this.backButton = backButton;
    this.buttonEasyAnimation = buttonEasyAnimation;
    this.buttonHardAnimation = buttonHardAnimation;
    this.txtWelcome = txtWelcome;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityGroupeEntryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityGroupeEntryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_groupe_entry, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityGroupeEntryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.back_button;
      Button backButton = ViewBindings.findChildViewById(rootView, id);
      if (backButton == null) {
        break missingId;
      }

      id = R.id.button_easy_animation;
      Button buttonEasyAnimation = ViewBindings.findChildViewById(rootView, id);
      if (buttonEasyAnimation == null) {
        break missingId;
      }

      id = R.id.button_hard_animation;
      Button buttonHardAnimation = ViewBindings.findChildViewById(rootView, id);
      if (buttonHardAnimation == null) {
        break missingId;
      }

      id = R.id.txt_welcome;
      TextView txtWelcome = ViewBindings.findChildViewById(rootView, id);
      if (txtWelcome == null) {
        break missingId;
      }

      return new ActivityGroupeEntryBinding((ConstraintLayout) rootView, backButton,
          buttonEasyAnimation, buttonHardAnimation, txtWelcome);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
