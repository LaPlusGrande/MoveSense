// Generated by view binder compiler. Do not edit!
package de.fhkiel.srcms.apps.therapy.physical.p.workout.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import de.fhkiel.srcms.apps.therapy.physical.p.workout.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class UserRvItemBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView idTVAnimationOne;

  @NonNull
  public final TextView idTVAnimationTwo;

  @NonNull
  public final TextView idTVIteration;

  @NonNull
  public final TextView idTVUserName;

  private UserRvItemBinding(@NonNull CardView rootView, @NonNull TextView idTVAnimationOne,
      @NonNull TextView idTVAnimationTwo, @NonNull TextView idTVIteration,
      @NonNull TextView idTVUserName) {
    this.rootView = rootView;
    this.idTVAnimationOne = idTVAnimationOne;
    this.idTVAnimationTwo = idTVAnimationTwo;
    this.idTVIteration = idTVIteration;
    this.idTVUserName = idTVUserName;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static UserRvItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static UserRvItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.user_rv_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static UserRvItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.idTVAnimationOne;
      TextView idTVAnimationOne = ViewBindings.findChildViewById(rootView, id);
      if (idTVAnimationOne == null) {
        break missingId;
      }

      id = R.id.idTVAnimationTwo;
      TextView idTVAnimationTwo = ViewBindings.findChildViewById(rootView, id);
      if (idTVAnimationTwo == null) {
        break missingId;
      }

      id = R.id.idTVIteration;
      TextView idTVIteration = ViewBindings.findChildViewById(rootView, id);
      if (idTVIteration == null) {
        break missingId;
      }

      id = R.id.idTVUserName;
      TextView idTVUserName = ViewBindings.findChildViewById(rootView, id);
      if (idTVUserName == null) {
        break missingId;
      }

      return new UserRvItemBinding((CardView) rootView, idTVAnimationOne, idTVAnimationTwo,
          idTVIteration, idTVUserName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
