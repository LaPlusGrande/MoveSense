// Generated by view binder compiler. Do not edit!
package de.fhkiel.srcms.apps.therapy.physical.p.workout.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import de.fhkiel.srcms.apps.therapy.physical.p.workout.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityUpdateUserBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button idBtnDelete;

  @NonNull
  public final Button idBtnPalybutton;

  @NonNull
  public final Button idBtnUpdateUser;

  @NonNull
  public final EditText idEdtAnimationOne;

  @NonNull
  public final EditText idEdtAnimationTwo;

  @NonNull
  public final EditText idEdtIteration;

  @NonNull
  public final EditText idEdtUserName;

  private ActivityUpdateUserBinding(@NonNull LinearLayout rootView, @NonNull Button idBtnDelete,
      @NonNull Button idBtnPalybutton, @NonNull Button idBtnUpdateUser,
      @NonNull EditText idEdtAnimationOne, @NonNull EditText idEdtAnimationTwo,
      @NonNull EditText idEdtIteration, @NonNull EditText idEdtUserName) {
    this.rootView = rootView;
    this.idBtnDelete = idBtnDelete;
    this.idBtnPalybutton = idBtnPalybutton;
    this.idBtnUpdateUser = idBtnUpdateUser;
    this.idEdtAnimationOne = idEdtAnimationOne;
    this.idEdtAnimationTwo = idEdtAnimationTwo;
    this.idEdtIteration = idEdtIteration;
    this.idEdtUserName = idEdtUserName;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityUpdateUserBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityUpdateUserBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_update_user, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityUpdateUserBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.idBtnDelete;
      Button idBtnDelete = ViewBindings.findChildViewById(rootView, id);
      if (idBtnDelete == null) {
        break missingId;
      }

      id = R.id.idBtnPalybutton;
      Button idBtnPalybutton = ViewBindings.findChildViewById(rootView, id);
      if (idBtnPalybutton == null) {
        break missingId;
      }

      id = R.id.idBtnUpdateUser;
      Button idBtnUpdateUser = ViewBindings.findChildViewById(rootView, id);
      if (idBtnUpdateUser == null) {
        break missingId;
      }

      id = R.id.idEdtAnimationOne;
      EditText idEdtAnimationOne = ViewBindings.findChildViewById(rootView, id);
      if (idEdtAnimationOne == null) {
        break missingId;
      }

      id = R.id.idEdtAnimationTwo;
      EditText idEdtAnimationTwo = ViewBindings.findChildViewById(rootView, id);
      if (idEdtAnimationTwo == null) {
        break missingId;
      }

      id = R.id.idEdtIteration;
      EditText idEdtIteration = ViewBindings.findChildViewById(rootView, id);
      if (idEdtIteration == null) {
        break missingId;
      }

      id = R.id.idEdtUserName;
      EditText idEdtUserName = ViewBindings.findChildViewById(rootView, id);
      if (idEdtUserName == null) {
        break missingId;
      }

      return new ActivityUpdateUserBinding((LinearLayout) rootView, idBtnDelete, idBtnPalybutton,
          idBtnUpdateUser, idEdtAnimationOne, idEdtAnimationTwo, idEdtIteration, idEdtUserName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
